<!--- TEMPLATENAME: reachfiveinitglobal --->
<isif condition="${pdict.loginRedirectUrl}">
    <script>
        window.location.href = decodeURIComponent('${dw.crypto.Encoding.toURI(pdict.loginRedirectUrl)}');
    </script>
<iselse/>
    <isif condition="${pdict.reachFiveCoreSdkUrl}">
        <script src="${pdict.reachFiveCoreSdkUrl}"></script>
        <script>
            window.sdkCoreClient = reach5.createClient({
                // Required parameters
                domain: '${pdict.reachFiveDomain}',
                clientId: '${pdict.reachFiveApiKey}',
                // Optional parameter
                language: '${pdict.reachFiveLanguageCode}' || 'en',
                locale: '${pdict.reachFivelocaleCode}'
            });

            window.reach5Const = {
                callbackUrl: '${pdict.callbackUrl}',
                reachFiveLogoutUrl: '${pdict.reachFiveLogoutUrl}',
                siteID: '${pdict.siteID}',
                stateUrl: '${pdict.stateUrl}',
                stateObjBase64: '${pdict.stateObjBase64}',
                reachFiveCookieName: '${pdict.reachFiveCookieName}',
                reachFiveLoginCookieName: '${pdict.reachFiveLoginCookieName}'
            }

            <iscomment>Required to cancel forced authentication</iscomment>
            <isif condition="${'isSessionAuthRequired' in pdict}">
                window.reach5Const.isSessionAuthRequired = ${pdict.isSessionAuthRequired};
            </isif>
        </script>

        <isinclude url="${URLUtils.url('ReachFiveController-UncachedContext')}" />

        <iscomment>	load global client side R5 lib </iscomment>
        <script defer src="${URLUtils.staticURL('/js/reachfiveglobal.js')}"></script>
    </isif>

    <isif condition="${pdict.loadUISDK && pdict.reachFiveUiSdkUrl}">
        <script src="${pdict.reachFiveUiSdkUrl}"></script>

        <script>
            window.sdkUiClient = reach5Widgets.createClient({
                // Required parameters
                domain: '${pdict.reachFiveDomain}',
                clientId: '${pdict.reachFiveApiKey}',
                // Optional parameter
                language: '${pdict.reachFiveLanguageCode}' || 'en',
                locale: '${pdict.reachFivelocaleCode}'
            });
        </script>

        <script>
            let allowForgotPassword = ${!pdict.isTransitionActive};
            let redirectUri = '${pdict.callbackUrl}';
            let origin ='${pdict.siteID}';
            let state = '${pdict.stateObjBase64}';
            let loginLink = '${pdict.resetPassLoginUrl}';
            let accessToken = '${pdict.reachFiveAccess_token}';
            let providerAccessToken = '${pdict.reachFiveProviderAccessToken}';
            let stateUrl = decodeURIComponent('${dw.crypto.Encoding.toURI(pdict.stateUrl)}')

            if(document.getElementById("load-social-connect-login")) {
                console.log('load-social-connect-login');
                <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('load-social-connect-login')}" encoding="off">
            }

            if(document.getElementById("load-social-connect-signup")) {
                console.log('load-social-connect-signup');
                <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('load-social-connect-signup')}" encoding="off">

            }

            if(document.getElementById("load-social-connect")) {
                console.log('load-social-connect')
                <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('load-social-connect')}" encoding="off">

            }


            if(document.getElementById("load-social-connect2")) {
                console.log('load-social-connect2')
                <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('load-social-connect2')}" encoding="off">
            }

            if (document.getElementById("reset-password")) {
                <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('reset-password')}" encoding="off">
            }
        </script>

        <isif condition="${!empty(pdict.reachFiveAccess_token)}">
            <script>
                if(document.getElementById("password-editor")) {
                    console.log('password-editor');
                    <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('password-editor')}" encoding="off">
                }

                // if(document.getElementById("profile-editor")) {
                //     sdkUiClient.showProfileEditor({
                //         container: 'profile-editor',
                //         accessToken: '${pdict.reachFiveAccess_token}',
                //         fields: [
                //             'given_name',
                //             'family_name',
                //             'birthdate',
                //             'consents.newsletter'
                //         ],
                //         onSuccess: function() {
                //             var el = document.getElementsByTagName('body');
                //             var event = new CustomEvent('reachfive-profile-update', {
                //                     bubbles: true,
                //                     detail: {
                //                         source: 'profileEditor',
                //                         updateUrl: decodeURIComponent('${dw.crypto.Encoding.toURI(pdict.updateProfileUrl)}')
                //                     }
                //                 });
                //             el[0].dispatchEvent(event);
                //         }
                //     });
                // }

                if(document.getElementById("email-editor")) {
                    <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('email-editor')}" encoding="off">
                }

                if(document.getElementById("phone-editor")) {
                    <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('phone-editor')}" encoding="off">
                }

                var socialAccountsContainer = document.getElementById("social-accounts-container");
                if (socialAccountsContainer) {
                    <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('social-accounts-container')}" encoding="off">
                }

            </script>

            <iscomment>
                TODO: This functionality related to "imlicid flow"
                    and it is normally disabled becasue of security issues
            <script type="text/javascript">
                var reAuthContainer = document.getElementById("re-auth-container");
                var socialAccountsContainer = document.getElementById("social-accounts-container");

                if(reAuthContainer && socialAccountsContainer) {
                    var idToken = null;

                    try{
                        idToken = '${pdict.CurrentSession.privacy.id_token}';
                    } catch(err) {
                        console.log(err)
                    }

                    console.log('social-accounts-container');
                    <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('re-auth-container')}" encoding="off">

                    sdkCoreClient.on('authenticated', function(authResult) {
                        let accessToken = authResult.accessToken;
                        <isprint value="${dw.system.Site.getCurrent().getCustomPreferenceValue('authenticated')}" encoding="off">
                    });
                }
            </script>
            </iscomment>
        </isif>
    </isif>
</isif>
