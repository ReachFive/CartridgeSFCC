<?xml version="1.0" encoding="UTF-8"?>
<preferences xmlns="http://www.demandware.com/xml/impex/preferences/2007-03-31">
    <custom-preferences>
        <all-instances/>
        <development>
            <preference preference-id="isReach5ThemeActive">true</preference>
            <preference preference-id="isReachFiveEnabled">true</preference>
            <preference preference-id="isReachFiveFastRegister">true</preference>
            <preference preference-id="isReachFiveLoginAllowed">false</preference>
<<<<<<< Updated upstream
=======
            <preference preference-id="isReachFiveEmailAsLogin">true</preference>
            <preference preference-id="isReachFiveReturnProviderToken">true</preference>
>>>>>>> Stashed changes
            <preference preference-id="reach5ApiKey">enterYourAPIKey</preference>
            <preference preference-id="reach5ClientSecret">enterYourAPIsecret</preference>
            <preference preference-id="reach5Domain">yourdomain.og4.me</preference>
            <preference preference-id="reach5ManagementApiKey">enterYourMGMTAPIKey</preference>
            <preference preference-id="reach5ManagementClientSecret">enterYourMGMTAPIsecret</preference>
            <preference preference-id="reachFiveProviderId">ReachFive</preference>
            <preference preference-id="reach5ManagementScope">manage:users read:users</preference>
            <preference preference-id="reach5ProfileFieldsJSON">{
    "profile": {
        "firstName": "given_name",
        "lastName": "family_name",
        "birthday": "birthdate",
        "gender": "gender",
        "companyName": "company",
        "phoneHome": "phone_number"
    },
    "address": {
        "ID": "title",
        "fullName": "recipient",
        "address1": "street_address",
        "city": "locality",
        "postalCode": "postal_code",
        "stateCode": "region",
        "countryCode": "country",
        "phone": "phone_number"
    },
    "consents": {
        "custom.isNewsletter": "newsletter"
    },
    "custom_fields": {
        "custom.cardNo": "loyalty_card_number"
    }
}</preference>
            <preference preference-id="reach5SupportedLanguageCodes">
                <value>en</value>
                <value>es</value>
                <value>fr</value>
                <value>it</value>
                <value>nl</value>
            </preference>
            <preference preference-id="authenticated">sdkUiClient.showSocialAccounts({
                            accessToken: accessToken,
                            container: 'social-accounts-container'
                        })</preference>
            <preference preference-id="email-editor">sdkUiClient.showEmailEditor({
                        container: 'email-editor',
                        accessToken: accessToken
                    })</preference>
            <preference preference-id="load-social-connect">sdkUiClient.showSocialLogin({
                    container: 'load-social-connect',
                    auth: {
                        responseType: 'code',
                        redirectUri: redirectUri,
                        origin : origin,
                        state: state
                    }
                })</preference>
            <preference preference-id="load-social-connect-login">sdkUiClient.showAuth({
                    container: 'load-social-connect-login',
                    allowSignup: false,
                    allowForgotPassword: allowForgotPassword,
                    auth: {
                        responseType: 'code',
                        redirectUri: redirectUri,
                        origin : origin,
                        state: state
                    }
                })</preference>
            <preference preference-id="load-social-connect-signup">sdkUiClient.showAuth({
                    container: 'load-social-connect-signup',
                    initialScreen: 'signup',
                    allowLogin: false,
                    allowForgotPassword: allowForgotPassword,
                    auth: {
                        responseType: 'code',
                        redirectUri: redirectUri,
                        origin : origin,
                        state: state
                    },
                    signupFields: [
                        "given_name",
                        "family_name",
                        "email",
                        "password",
                        "password_confirmation",
                        "consents.newsletter"
                    ]
                })</preference>
            <preference preference-id="load-social-connect2">sdkUiClient.showSocialLogin({
                    container: 'load-social-connect2',
                    auth: {
                        responseType: 'code',
                        redirectUri: redirectUri,
                        origin : origin
                    }
                })</preference>
            <preference preference-id="password-editor">sdkUiClient.showPasswordEditor({
                        container: 'password-editor',
                        accessToken: accessToken,
                        promptOldPassword: 'true',
                        onSuccess: function () {
                            window.location.href = stateUrl
                        }
                    })</preference>
            <preference preference-id="phone-editor">sdkUiClient.showPhoneNumberEditor({
                        container: 'phone-editor',
                        accessToken: accessToken
                    })</preference>
            <preference preference-id="re-auth-container">sdkUiClient.showAuth({
                        container: 're-auth-container',
                        allowSignup: false,
                        allowForgotPassword: false,
                        auth: {
                            prompt: 'login',
                            idTokenHint: idToken
                        }
                    })</preference>
            <preference preference-id="reset-password">sdkUiClient.showPasswordReset({
                    container: 'reset-password',
                    loginLink: loginLink,
                    canShowPassword: true
                })</preference>
            <preference preference-id="social-accounts-container">sdkUiClient.showSocialAccounts({
                        accessToken: accessToken,
                        container: 'social-accounts-container',
                        auth: {
                            redirectUri: redirectUri
                        },
                    })</preference>
        </development>
        <staging/>
        <production/>
    </custom-preferences>
</preferences>
